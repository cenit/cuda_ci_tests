language: cpp

matrix:
  include:

    - os: linux
      compiler: gcc
      name: ubuntu 14.04 - native gcc - CUDA 10
      addons:
        apt:
          update: true
          packages:
            - libopencv-dev
            - gfortran
      env:
        - MATRIX_EVAL="wget http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1404/x86_64/cuda-repo-ubuntu1404_10.0.130-1_amd64.deb && sudo apt-key adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1404/x86_64/7fa2af80.pub && sudo dpkg -i cuda-repo-ubuntu1404_10.0.130-1_amd64.deb && wget http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1404/x86_64/nvidia-machine-learning-repo-ubuntu1404_4.0-2_amd64.deb && sudo dpkg -i nvidia-machine-learning-repo-ubuntu1404_4.0-2_amd64.deb && sudo apt-get -y update && sudo apt-get install -y --no-install-recommends cuda-compiler-10-0 cuda-cudart-dev-10-0 cuda-cublas-dev-10-0 cuda-curand-dev-10-0 && sudo apt-get install -y --no-install-recommends libcudnn7-dev && CUDACXX=/usr/local/cuda-10.0/bin/nvcc"

before_script:
  - travis_retry eval "${MATRIX_EVAL}"
  - wget --no-check-certificate https://github.com/Kitware/CMake/releases/download/v3.13.4/cmake-3.13.4-Linux-x86_64.tar.gz
  - tar -xzf cmake-3.13.4-Linux-x86_64.tar.gz
  - export PATH=$PWD/cmake-3.13.4-Linux-x86_64/bin:$PATH
  #- export PATH=/usr/local/cuda-10.0/bin:$PATH
  - echo CUDACXX=$CUDACXX
  - ls -l $CUDACXX
  - ls -l /usr/local/cuda-10.0/
  - ls -l /usr/local/cuda-10.0/bin

  - mkdir build_debug
  - cd build_debug
  - cmake .. -DCMAKE_BUILD_TYPE="Debug"
  - cd ..
  - mkdir build_release
  - cd build_release
  - cmake .. -DCMAKE_BUILD_TYPE="Release"
  - cd ..

script:
  - cd build_debug && cmake --build . && cd ..
  - cd build_release && cmake --build . && cd ..
